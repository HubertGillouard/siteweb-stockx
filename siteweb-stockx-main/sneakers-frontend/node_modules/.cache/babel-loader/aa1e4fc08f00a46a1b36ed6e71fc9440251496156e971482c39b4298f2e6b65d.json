{"ast":null,"code":"var _jsxFileName = \"/home/hubert/siteweb-stockx-main/sneakers-frontend/src/contexts/CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const addToCart = product => {\n    const existing = cart.find(item => item.id === product.id);\n    if (existing) {\n      setCart(cart.map(item => item.id === product.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n    } else {\n      setCart([...cart, {\n        ...product,\n        quantity: 1\n      }]);\n    }\n  };\n  const removeFromCart = id => setCart(cart.filter(item => item.id !== id));\n  const clearCart = () => setCart([]);\n  const updateQuantity = (id, quantity) => {\n    if (quantity <= 0) removeFromCart(id);else setCart(cart.map(item => item.id === id ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const subtotal = cart.reduce((sum, item) => sum + Number(item.price) * Number(item.quantity), 0);\n  const checkoutCart = async () => {\n    // Paiement\n    const paymentRes = await fetch(\"http://localhost:5000/api/payments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        amount: subtotal\n      })\n    });\n    const payment = await paymentRes.json();\n    if (!payment.id) throw new Error(\"Erreur paiement\");\n\n    // Création commande\n    const orderRes = await fetch(\"http://localhost:5000/api/orders\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: 1,\n        items: cart,\n        paymentId: payment.id\n      })\n    });\n    const orderData = await orderRes.json();\n    if (!orderData.order) throw new Error(\"Erreur commande\");\n    clearCart();\n    return orderData.order;\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      updateQuantity,\n      subtotal,\n      checkoutCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","addToCart","product","existing","find","item","id","map","quantity","removeFromCart","filter","clearCart","updateQuantity","subtotal","reduce","sum","Number","price","checkoutCart","paymentRes","fetch","method","headers","body","JSON","stringify","amount","payment","json","Error","orderRes","userId","items","paymentId","orderData","order","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hubert/siteweb-stockx-main/sneakers-frontend/src/contexts/CartContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n\n  const addToCart = (product) => {\n    const existing = cart.find(item => item.id === product.id);\n    if (existing) {\n      setCart(cart.map(item =>\n        item.id === product.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      setCart([...cart, { ...product, quantity: 1 }]);\n    }\n  };\n\n  const removeFromCart = (id) => setCart(cart.filter(item => item.id !== id));\n  const clearCart = () => setCart([]);\n  const updateQuantity = (id, quantity) => {\n    if (quantity <= 0) removeFromCart(id);\n    else setCart(cart.map(item => item.id === id ? { ...item, quantity } : item));\n  };\n\n  const subtotal = cart.reduce((sum, item) => sum + Number(item.price) * Number(item.quantity), 0);\n\n  const checkoutCart = async () => {\n    // Paiement\n    const paymentRes = await fetch(\"http://localhost:5000/api/payments\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ amount: subtotal })\n    });\n    const payment = await paymentRes.json();\n    if (!payment.id) throw new Error(\"Erreur paiement\");\n\n    // Création commande\n    const orderRes = await fetch(\"http://localhost:5000/api/orders\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ userId: 1, items: cart, paymentId: payment.id })\n    });\n    const orderData = await orderRes.json();\n    if (!orderData.order) throw new Error(\"Erreur commande\");\n\n    clearCart();\n    return orderData.order;\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, clearCart, updateQuantity, subtotal, checkoutCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}