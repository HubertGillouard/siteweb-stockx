{"ast":null,"code":"var _jsxFileName = \"/home/hubert/siteweb-stockx-main/sneakers-frontend/src/contexts/CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const addToCart = product => {\n    const existing = cart.find(item => item.id === product.id);\n    if (existing) {\n      setCart(cart.map(item => item.id === product.id ? {\n        ...item,\n        quantity: Number(item.quantity) + 1\n      } : item));\n    } else {\n      setCart([...cart, {\n        ...product,\n        quantity: 1\n      }]);\n    }\n  };\n  const removeFromCart = id => setCart(cart.filter(item => item.id !== id));\n  const clearCart = () => setCart([]);\n  const updateQuantity = (id, quantity) => {\n    if (quantity <= 0) removeFromCart(id);else setCart(cart.map(item => item.id === id ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const subtotal = cart.reduce((sum, item) => sum + Number(item.price) * Number(item.quantity), 0);\n  const checkoutCart = async () => {\n    try {\n      // 1️⃣ Paiement fictif\n      const paymentRes = await fetch(\"/api/payments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          amount: subtotal\n        })\n      });\n      if (!paymentRes.ok) throw new Error(\"Erreur paiement\");\n      const payment = await paymentRes.json();\n\n      // 2️⃣ Création commande\n      const orderRes = await fetch(\"/api/orders\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: 1,\n          items: cart,\n          paymentId: payment.id\n        })\n      });\n      if (!orderRes.ok) throw new Error(\"Erreur création commande\");\n      const orderData = await orderRes.json();\n      clearCart();\n      return orderData.order;\n    } catch (err) {\n      console.error(\"Erreur lors du checkout :\", err);\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      updateQuantity,\n      subtotal,\n      checkoutCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","addToCart","product","existing","find","item","id","map","quantity","Number","removeFromCart","filter","clearCart","updateQuantity","subtotal","reduce","sum","price","checkoutCart","paymentRes","fetch","method","headers","body","JSON","stringify","amount","ok","Error","payment","json","orderRes","userId","items","paymentId","orderData","order","err","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hubert/siteweb-stockx-main/sneakers-frontend/src/contexts/CartContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n\n  const addToCart = (product) => {\n    const existing = cart.find(item => item.id === product.id);\n    if (existing) {\n      setCart(cart.map(item =>\n        item.id === product.id\n          ? { ...item, quantity: Number(item.quantity) + 1 }\n          : item\n      ));\n    } else {\n      setCart([...cart, { ...product, quantity: 1 }]);\n    }\n  };\n\n  const removeFromCart = (id) => setCart(cart.filter(item => item.id !== id));\n  const clearCart = () => setCart([]);\n  const updateQuantity = (id, quantity) => {\n    if (quantity <= 0) removeFromCart(id);\n    else setCart(cart.map(item => item.id === id ? { ...item, quantity } : item));\n  };\n\n  const subtotal = cart.reduce((sum, item) => sum + Number(item.price) * Number(item.quantity), 0);\n\n  const checkoutCart = async () => {\n    try {\n      // 1️⃣ Paiement fictif\n      const paymentRes = await fetch(\"/api/payments\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ amount: subtotal })\n      });\n\n      if (!paymentRes.ok) throw new Error(\"Erreur paiement\");\n      const payment = await paymentRes.json();\n\n      // 2️⃣ Création commande\n      const orderRes = await fetch(\"/api/orders\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ userId: 1, items: cart, paymentId: payment.id })\n      });\n\n      if (!orderRes.ok) throw new Error(\"Erreur création commande\");\n      const orderData = await orderRes.json();\n\n      clearCart();\n      return orderData.order;\n    } catch (err) {\n      console.error(\"Erreur lors du checkout :\", err);\n      throw err;\n    }\n  };\n\n  return (\n    <CartContext.Provider value={{\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      updateQuantity,\n      subtotal,\n      checkoutCart\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,SAAS,GAAIC,OAAO,IAAK;IAC7B,MAAMC,QAAQ,GAAGJ,IAAI,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IAC1D,IAAIH,QAAQ,EAAE;MACZH,OAAO,CAACD,IAAI,CAACQ,GAAG,CAACF,IAAI,IACnBA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,GAClB;QAAE,GAAGD,IAAI;QAAEG,QAAQ,EAAEC,MAAM,CAACJ,IAAI,CAACG,QAAQ,CAAC,GAAG;MAAE,CAAC,GAChDH,IACN,CAAC,CAAC;IACJ,CAAC,MAAM;MACLL,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAE,GAAGG,OAAO;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAME,cAAc,GAAIJ,EAAE,IAAKN,OAAO,CAACD,IAAI,CAACY,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC3E,MAAMM,SAAS,GAAGA,CAAA,KAAMZ,OAAO,CAAC,EAAE,CAAC;EACnC,MAAMa,cAAc,GAAGA,CAACP,EAAE,EAAEE,QAAQ,KAAK;IACvC,IAAIA,QAAQ,IAAI,CAAC,EAAEE,cAAc,CAACJ,EAAE,CAAC,CAAC,KACjCN,OAAO,CAACD,IAAI,CAACQ,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGD,IAAI;MAAEG;IAAS,CAAC,GAAGH,IAAI,CAAC,CAAC;EAC/E,CAAC;EAED,MAAMS,QAAQ,GAAGf,IAAI,CAACgB,MAAM,CAAC,CAACC,GAAG,EAAEX,IAAI,KAAKW,GAAG,GAAGP,MAAM,CAACJ,IAAI,CAACY,KAAK,CAAC,GAAGR,MAAM,CAACJ,IAAI,CAACG,QAAQ,CAAC,EAAE,CAAC,CAAC;EAEhG,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,UAAU,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC9CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEZ;QAAS,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAI,CAACK,UAAU,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtD,MAAMC,OAAO,GAAG,MAAMV,UAAU,CAACW,IAAI,CAAC,CAAC;;MAEvC;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAAC,aAAa,EAAE;QAC1CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEO,MAAM,EAAE,CAAC;UAAEC,KAAK,EAAElC,IAAI;UAAEmC,SAAS,EAAEL,OAAO,CAACvB;QAAG,CAAC;MACxE,CAAC,CAAC;MAEF,IAAI,CAACyB,QAAQ,CAACJ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7D,MAAMO,SAAS,GAAG,MAAMJ,QAAQ,CAACD,IAAI,CAAC,CAAC;MAEvClB,SAAS,CAAC,CAAC;MACX,OAAOuB,SAAS,CAACC,KAAK;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MAC/C,MAAMA,GAAG;IACX;EACF,CAAC;EAED,oBACE3C,OAAA,CAACC,WAAW,CAAC6C,QAAQ;IAACC,KAAK,EAAE;MAC3B1C,IAAI;MACJE,SAAS;MACTS,cAAc;MACdE,SAAS;MACTC,cAAc;MACdC,QAAQ;MACRI;IACF,CAAE;IAAArB,QAAA,EACCA;EAAQ;IAAA6C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/C,EAAA,CApEWF,YAAY;AAAAkD,EAAA,GAAZlD,YAAY;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}